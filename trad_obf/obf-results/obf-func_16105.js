(function(_0x3341b5,_0x37fb5c){const _0x568272=_0x5176,_0x5e8454=_0x3341b5();while(!![]){try{const _0x323550=-parseInt(_0x568272(0x1a4))/0x1*(-parseInt(_0x568272(0x184))/0x2)+-parseInt(_0x568272(0x182))/0x3*(-parseInt(_0x568272(0x140))/0x4)+parseInt(_0x568272(0x13c))/0x5*(parseInt(_0x568272(0x148))/0x6)+-parseInt(_0x568272(0x19c))/0x7+-parseInt(_0x568272(0x17e))/0x8*(parseInt(_0x568272(0x13e))/0x9)+-parseInt(_0x568272(0x168))/0xa*(-parseInt(_0x568272(0x17c))/0xb)+parseInt(_0x568272(0x14d))/0xc*(parseInt(_0x568272(0x149))/0xd);if(_0x323550===_0x37fb5c)break;else _0x5e8454['push'](_0x5e8454['shift']());}catch(_0x2776e5){_0x5e8454['push'](_0x5e8454['shift']());}}}(_0x5b92,0x98f5c));async function initRepo({repository:_0x340914,token:_0x72a8c3,endpoint:_0x17a369,forkMode:_0x4b1a39,forkToken:_0x26cdcb,gitPrivateKey:_0x28eac0,gitFs:_0x5297cb,localDir:_0x1b46de,includeForks:_0x14d9dd}){const _0x31ffac=_0x5176,_0x3d4444={'GyCZM':_0x31ffac(0x161),'llphL':function(_0x2e5785,_0xda9549){return _0x2e5785+_0xda9549;},'buMfz':_0x31ffac(0x1b6),'aUMqX':_0x31ffac(0x154),'Jcafp':function(_0x402b69){return _0x402b69();},'BCyrH':_0x31ffac(0x165),'yHPHn':_0x31ffac(0x159),'ymKFM':function(_0x5e91eb,_0x2c4511){return _0x5e91eb(_0x2c4511);},'kiZuu':'base64','yptBQ':_0x31ffac(0x17b),'IQNFX':_0x31ffac(0x1a5),'zuhfB':_0x31ffac(0x160),'Wihba':_0x31ffac(0x144),'SvRgF':function(_0xf6ccf,_0x17db19){return _0xf6ccf===_0x17db19;},'cUdgk':'rebase','jCZFR':'squash','FHKXN':'merge','WWnMx':_0x31ffac(0x15e),'PrIGd':_0x31ffac(0x196),'xGyBl':_0x31ffac(0x183),'OKqXq':function(_0x88b289,_0x3c0ae6){return _0x88b289===_0x3c0ae6;},'Rbowd':function(_0x4bdad3,_0x3d4794){return _0x4bdad3===_0x3d4794;},'gMNbp':_0x31ffac(0x195),'hWzhm':_0x31ffac(0x169),'IuomZ':_0x31ffac(0x171),'BkLkS':function(_0x5f4778,_0x5c117e){return _0x5f4778===_0x5c117e;},'CjmOY':function(_0x217807){return _0x217807();},'skQot':_0x31ffac(0x197),'MSMUE':_0x31ffac(0x1ad),'hMUSU':_0x31ffac(0x1a8),'vdAeG':_0x31ffac(0x1aa),'iSTJr':_0x31ffac(0x156),'HRbhT':_0x31ffac(0x199),'Sxzgx':function(_0x5d97e5,_0x2ef47b){return _0x5d97e5(_0x2ef47b);},'yJMpf':_0x31ffac(0x145),'OqHNV':function(_0x2ca81,_0x2ad141){return _0x2ca81||_0x2ad141;},'qExvD':_0x31ffac(0x18e)};logger[_0x31ffac(0x17d)]('initRepo(\x22'+_0x340914+'\x22)');const _0x45e933=hostRules[_0x31ffac(0x1af)]({'platform':_0x3d4444[_0x31ffac(0x13b)]},{'token':_0x72a8c3,'endpoint':_0x17a369});if(!_0x45e933[_0x31ffac(0x146)])throw new Error(_0x31ffac(0x177)+_0x340914);hostRules[_0x31ffac(0x19a)]({..._0x45e933,'platform':_0x31ffac(0x161),'default':!![]}),logger[_0x31ffac(0x1b4)](_0x3d4444[_0x31ffac(0x194)](_0x3d4444['buMfz'],await getRenovateUsername())),logger[_0x31ffac(0x1b4)](_0x3d4444['llphL'](_0x3d4444[_0x31ffac(0x151)],global[_0x31ffac(0x14b)])),_0x3d4444[_0x31ffac(0x19e)](cleanRepo),config[_0x31ffac(0x16a)]=_0x17a369&&!_0x17a369[_0x31ffac(0x192)](_0x3d4444[_0x31ffac(0x187)]),config[_0x31ffac(0x18c)]=_0x1b46de,config[_0x31ffac(0x13d)]=_0x3d4444[_0x31ffac(0x13b)],config['repository']=_0x340914,[config[_0x31ffac(0x1b3)],config[_0x31ffac(0x1a0)]]=_0x340914[_0x31ffac(0x18a)]('/'),config[_0x31ffac(0x16f)]=_0x28eac0;const _0x11d5af={};let _0x450701;try{_0x450701=await get(_0x31ffac(0x19d)+_0x340914),logger[_0x31ffac(0x1a6)]({'repositoryDetails':_0x450701[_0x31ffac(0x19f)]},_0x3d4444[_0x31ffac(0x179)]);if(_0x450701[_0x31ffac(0x19f)][_0x31ffac(0x17b)]&&_0x5297cb&&!_0x14d9dd)try{const _0xed62ef=JSON[_0x31ffac(0x15a)](Buffer[_0x31ffac(0x180)]((await _0x3d4444[_0x31ffac(0x157)](get,_0x31ffac(0x19d)+config[_0x31ffac(0x16e)]+_0x31ffac(0x158)+defaultConfigFile))[_0x31ffac(0x19f)][_0x31ffac(0x1b7)],_0x3d4444[_0x31ffac(0x18b)])[_0x31ffac(0x18f)]());if(!_0xed62ef[_0x31ffac(0x14a)])throw new Error();}catch(_0x1d9b5b){throw new Error(_0x3d4444[_0x31ffac(0x173)]);}if(_0x450701[_0x31ffac(0x19f)]['full_name']&&_0x450701[_0x31ffac(0x19f)][_0x31ffac(0x19b)]!==_0x340914){logger[_0x31ffac(0x1b4)]({'repository':_0x340914,'this_repository':_0x450701[_0x31ffac(0x19f)]['full_name']},_0x3d4444['IQNFX']);throw new Error(_0x3d4444[_0x31ffac(0x150)]);}if(_0x450701[_0x31ffac(0x19f)][_0x31ffac(0x144)]){logger['info']('Repository\x20is\x20archived\x20-\x20throwing\x20error\x20to\x20abort\x20renovation');throw new Error(_0x3d4444[_0x31ffac(0x170)]);}_0x11d5af[_0x31ffac(0x191)]=_0x450701[_0x31ffac(0x19f)]['private']===!![],_0x11d5af[_0x31ffac(0x14c)]=_0x3d4444[_0x31ffac(0x198)](_0x450701[_0x31ffac(0x19f)][_0x31ffac(0x17b)],!![]);const _0xe9f512=_0x450701[_0x31ffac(0x19f)][_0x31ffac(0x13f)]['login'];logger[_0x31ffac(0x17d)](_0x340914+_0x31ffac(0x15b)+_0xe9f512),config[_0x31ffac(0x172)]=_0x450701[_0x31ffac(0x19f)]['default_branch'],config[_0x31ffac(0x18d)]=config['defaultBranch'],logger['debug'](_0x340914+_0x31ffac(0x14e)+config[_0x31ffac(0x18d)]);if(_0x450701[_0x31ffac(0x19f)][_0x31ffac(0x166)])config[_0x31ffac(0x181)]=_0x3d4444[_0x31ffac(0x17a)];else{if(_0x450701[_0x31ffac(0x19f)][_0x31ffac(0x13a)])config[_0x31ffac(0x181)]=_0x3d4444[_0x31ffac(0x189)];else _0x450701[_0x31ffac(0x19f)]['allow_merge_commit']?config['mergeMethod']=_0x3d4444[_0x31ffac(0x14f)]:logger['info'](_0x3d4444[_0x31ffac(0x1ac)]);}}catch(_0x1253a6){const _0x5bce65=_0x3d4444[_0x31ffac(0x186)][_0x31ffac(0x18a)]('|');let _0x28581d=0x0;while(!![]){switch(_0x5bce65[_0x28581d++]){case'0':logger[_0x31ffac(0x1b4)]({'err':_0x1253a6},_0x3d4444['xGyBl']);continue;case'1':if(_0x3d4444['OKqXq'](_0x1253a6[_0x31ffac(0x174)],_0x3d4444[_0x31ffac(0x170)])||_0x3d4444['Rbowd'](_0x1253a6[_0x31ffac(0x174)],_0x3d4444['zuhfB']))throw _0x1253a6;continue;case'2':if(_0x1253a6['message'][_0x31ffac(0x192)](_0x31ffac(0x15c)))throw new Error(_0x3d4444[_0x31ffac(0x1b0)]);continue;case'3':if(_0x3d4444[_0x31ffac(0x188)](_0x1253a6['message'],_0x31ffac(0x17b)))throw _0x1253a6;continue;case'4':if(_0x1253a6[_0x31ffac(0x1a1)]===0x193)throw new Error(_0x3d4444[_0x31ffac(0x16c)]);continue;case'5':logger[_0x31ffac(0x17d)](_0x3d4444['IuomZ']);continue;case'6':throw _0x1253a6;continue;case'7':if(_0x3d4444[_0x31ffac(0x175)](_0x1253a6['statusCode'],0x194))throw new Error('not-found');continue;}break;}}config[_0x31ffac(0x1a7)]=null,config[_0x31ffac(0x185)]=null,config['openPrList']=null,config['closedPrList']=null,config[_0x31ffac(0x1ae)]=new Storage(),await config[_0x31ffac(0x1ae)]['initRepo'](config);if(_0x4b1a39){logger[_0x31ffac(0x1b4)](_0x31ffac(0x16d)),config[_0x31ffac(0x15d)]=_0x26cdcb;const _0x1e5bdd=await _0x3d4444[_0x31ffac(0x164)](getBaseCommitSHA);config[_0x31ffac(0x147)]=null,config[_0x31ffac(0x143)]=config[_0x31ffac(0x16e)],config[_0x31ffac(0x16e)]=null;const _0x15535d=(await get(_0x3d4444[_0x31ffac(0x16b)],{'token':_0x26cdcb||_0x45e933[_0x31ffac(0x146)],'paginate':!![]}))[_0x31ffac(0x19f)][_0x31ffac(0x1ab)](_0x60ec91=>_0x60ec91[_0x31ffac(0x19b)]);try{config['repository']=(await get[_0x31ffac(0x153)]('repos/'+_0x340914+_0x31ffac(0x152),{'token':_0x26cdcb||_0x45e933[_0x31ffac(0x146)]}))[_0x31ffac(0x19f)][_0x31ffac(0x19b)];}catch(_0x3c1e6c){logger[_0x31ffac(0x1b4)]({'err':_0x3c1e6c},_0x3d4444[_0x31ffac(0x178)]);throw new Error(_0x31ffac(0x1a9));}if(_0x15535d[_0x31ffac(0x141)](config[_0x31ffac(0x16e)])){logger[_0x31ffac(0x1b4)]({'repository_fork':config[_0x31ffac(0x16e)]},_0x3d4444['hMUSU']),logger['debug']({'baseBranch':config[_0x31ffac(0x18d)],'parentSha':_0x1e5bdd},_0x3d4444['vdAeG']);try{await get[_0x31ffac(0x167)](_0x31ffac(0x19d)+config['repository']+_0x31ffac(0x15f)+config[_0x31ffac(0x18d)],{'body':{'sha':_0x1e5bdd,'force':!![]},'token':_0x26cdcb||_0x45e933['token']});}catch(_0x52b7ae){if(_0x3d4444['Rbowd'](_0x52b7ae['statusCode'],0x1a6)&&_0x52b7ae[_0x31ffac(0x174)][_0x31ffac(0x192)](_0x3d4444[_0x31ffac(0x1a3)]))throw new Error(_0x3d4444[_0x31ffac(0x1b1)]);}}else logger['info']({'repository_fork':config[_0x31ffac(0x16e)]},_0x31ffac(0x162)),await _0x3d4444[_0x31ffac(0x163)](delay,0x7530);await config[_0x31ffac(0x1ae)]['initRepo'](config);}if(_0x5297cb){logger[_0x31ffac(0x17d)](_0x3d4444[_0x31ffac(0x1b5)]);let {host:_0x349d58}=URL[_0x31ffac(0x15a)](_0x45e933[_0x31ffac(0x142)]);_0x3d4444[_0x31ffac(0x188)](_0x349d58,_0x31ffac(0x1b2))&&(_0x349d58=null);_0x349d58=_0x3d4444[_0x31ffac(0x190)](_0x349d58,_0x3d4444[_0x31ffac(0x176)]);const _0x194fda=GitStorage[_0x31ffac(0x155)]({'gitFs':_0x5297cb,'auth':config[_0x31ffac(0x15d)]||(global[_0x31ffac(0x193)]?_0x31ffac(0x17f)+_0x45e933[_0x31ffac(0x146)]:_0x45e933[_0x31ffac(0x146)]),'hostname':_0x349d58,'repository':config[_0x31ffac(0x16e)]});config[_0x31ffac(0x1ae)]=new GitStorage(),await config[_0x31ffac(0x1ae)][_0x31ffac(0x1a2)]({...config,'url':_0x194fda});}return _0x11d5af;}function _0x5176(_0x28cb9c,_0x324934){const _0x5b92ea=_0x5b92();return _0x5176=function(_0x5176f0,_0x33fcc2){_0x5176f0=_0x5176f0-0x13a;let _0x185d4c=_0x5b92ea[_0x5176f0];return _0x185d4c;},_0x5176(_0x28cb9c,_0x324934);}function _0x5b92(){const _0x1f6b12=['yptBQ','message','BkLkS','qExvD','No\x20token\x20found\x20for\x20GitHub\x20repository\x20','MSMUE','yHPHn','cUdgk','fork','689304SshVOg','debug','8ESohle','x-access-token:','from','mergeMethod','177834eyejBV','Unknown\x20GitHub\x20initRepo\x20error','10644oicjPm','prList','PrIGd','BCyrH','Rbowd','jCZFR','split','kiZuu','localDir','baseBranch','github.com','toString','OqHNV','privateRepo','startsWith','appMode','llphL','blocked','5|1|4|7|2|3|0|6','user/repos?per_page=100','SvRgF','repository-changed','update','full_name','4841928egAjrJ','repos/','Jcafp','body','repositoryName','statusCode','initRepo','iSTJr','29DZUipz','Repository\x20has\x20been\x20renamed','trace','issueList','Found\x20existing\x20fork','cannot-fork','Setting\x20baseBranch\x20ref\x20in\x20fork','map','WWnMx','Error\x20forking\x20repository','storage','find','gMNbp','HRbhT','api.github.com','repositoryOwner','info','yJMpf','Authenticated\x20as\x20user:\x20','content','allow_squash_merge','GyCZM','3624615gOiZeP','platform','7301349yjWxOP','owner','8zPvrOU','includes','endpoint','parentRepo','archived','Enabling\x20Git\x20FS','token','baseCommitSHA','6wMIbUz','20085fJrHgh','includeForks','renovateVersion','isFork','4896oNtXHR','\x20default\x20branch\x20=\x20','FHKXN','zuhfB','aUMqX','/forks','post','Using\x20renovate\x20version:\x20','getUrl','Object\x20does\x20not\x20exist','ymKFM','/contents/','Repository\x20details','parse','\x20owner\x20=\x20','Repository\x20access\x20blocked','forkToken','Could\x20not\x20find\x20allowed\x20merge\x20methods\x20for\x20repo','/git/refs/heads/','renamed','github','Created\x20fork','Sxzgx','CjmOY','https://api.github.com','allow_rebase_merge','patch','80YtDEhs','forbidden','isGhe','skQot','hWzhm','Bot\x20is\x20in\x20forkMode','repository','gitPrivateKey','Wihba','Caught\x20initRepo\x20error','defaultBranch'];_0x5b92=function(){return _0x1f6b12;};return _0x5b92();}